version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:14-3.3
    container_name: pizzeria-postgres
    environment:
      POSTGRES_DB: pizzeria_search
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pizzeria123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: pizzeria-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Application
  app:
    build: .
    container_name: pizzeria-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: pizzeria_search
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-pizzeria123}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GOOGLE_PLACES_API_KEY: ${GOOGLE_PLACES_API_KEY}
      YELP_API_KEY: ${YELP_API_KEY}
      FOURSQUARE_API_KEY: ${FOURSQUARE_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
